# -*- coding: utf-8 -*-
"""Image Steganography.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19nwNfb4kmMLjyuGqb8sH5yOYvPZJy-w8
"""

from PIL import Image
import random

# Convert encoding data into 8-bit binary
# form using ASCII value of characters
def genData(data):

		newd = [] # binary code list of image pixels

		for i in data:
			newd.append(format(ord(i), '08b')) #convert to binary
		return newd

# Pixels are modified according to the
# 8-bit binary data and finally returned
def modifiedPix(pix, data):

	datalist = genData(data) # binary converted list
	#print("papu 1", datalist)
	lendata = len(datalist)# length of binary data
	#print("papu 3",lendata)
	imdata = iter(pix) # iterate by every pixel

	for i in range(lendata):

		# 3 pixels(r,g,b) extracting at a time
		pix = [value for value in imdata.__next__()[:3]
          + imdata.__next__()[:3]
          + imdata.__next__()[:3]]

		#print("papu", pix)
		# Changing pixel values, odd for 1 and 0 for even
		for j in range(0, 8):
			if (datalist[i][j] == '0' and pix[j]% 2 != 0):
				pix[j] -= 1

			elif (datalist[i][j] == '1' and pix[j] % 2 == 0):
				if(pix[j] != 0):
					pix[j] -= 1
				else:
					pix[j] += 1

		# Eighth pixel of every set tells
		# whether to stop or read further.
		# 0 means keep reading; 1 means thec
		# message is over.
		if (i == lendata - 1):
			if (pix[-1] % 2 == 0):
				if(pix[-1] != 0):
					pix[-1] -= 1
				else:
					pix[-1] += 1

		else:
			if (pix[-1] % 2 != 0):
				pix[-1] -= 1

		pix = tuple(pix)
		yield pix[0:3] # returning tuples of pixels
		yield pix[3:6]
		yield pix[6:9]
		# print("pppppppppp",pix[0:9])

def encode_img(newimg, data, pwd):

	#Getting image size like 1166
	w = newimg.size[0]
	#print('papu2 : ',w)
	(x, y) = (0, 0)
	data_new = data + '$' + pwd
	for pixel in modifiedPix(newimg.getdata(), data_new):

		# Putting modified pixels in the new image
		newimg.putpixel((x, y), pixel)
		if (x == w - 1):
			x = 0
			y += 1
		else:
			x += 1

# Encode data into image
def encode():
	# img = input("Enter image name(with extension) : ")
	for fno in range(1,110):

		img = '/content/folder/GROUP ORIGINAL IMAGES/IMG'+str(fno)+'.PNG'
		image = Image.open(img,'r')

		myfile=open('/content/folder/IMG'+str(fno)+'.TXT',"a")

	# data = input("Enter data to be encoded : ")
		data=random.choice(MESSAGES)
		myfile.write("Message: "+data)
		if (len(data) == 0):
			raise ValueError('Data is empty')

	# pwd = input("Enter Password to be encoded : ")
		pwd=random.choice(PASSWORDS)
		myfile.write("\nPassword: "+pwd)
		myfile.close()
		if (len(pwd) == 0):
			raise ValueError('Data is empty')

		newimg = image.copy()
	#print(newimg)
		encode_img(newimg, data, pwd)

	# new_img_name = input("Enter the name of new image(with extension) : ")
		new_img_name=img.replace('.PNG','s.PNG')
		newimg.save(new_img_name, str(new_img_name.split(".")[1].upper()))

# Decode the data in the image
def decode():
	img = input("Enter image name(with extension) : ")
	image = Image.open(img, 'r')

	pwd = input("Enter Password : ")
	data = ''
	imgdata = iter(image.getdata())

	while (True):
		pixels = [value for value in imgdata.__next__()[:3] +
								imgdata.__next__()[:3] +
								imgdata.__next__()[:3]]

		# string of binary data
		binstr = ''

		for i in pixels[:8]:
			if (i % 2 == 0):
				binstr += '0'
			else:
				binstr += '1'

		data += chr(int(binstr, 2))
		if (pixels[-1] % 2 != 0):
			 data = data.split("$")
			 if(data[1] == pwd):
				 return data[0]
MESSAGES = [
    "a",
    "Paris",
    "steganography is cool and fun",
    "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "a"*10,
    "Paris"*10,
    "steganography is cool and fun"*10,
    "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." * 10
]

PASSWORDS = ['123',
             'password',
						       'liverpool',
									    'letmein',
											  '123456',
												 'qwerty',
												 'charlie',
												 'monkey',
												 'arsenal',
												 'thomas']
# Main Function
def main():
	while(True):
		ch = int(input(":: Welcome to Steganography ::\n"
						"1. Encode\n2. Decode\n3. Exit\n"))
		if(ch==1):
				encode()

		elif(ch==2):
				print("Decoded Word : " + decode() + "\n")

		elif(ch==3):
				break

		else:
				raise Exception("Enter correct input")

# Driver Code
if __name__ == '__main__' :


	# Calling main function
	main()